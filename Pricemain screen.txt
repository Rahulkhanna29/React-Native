/* eslint-disable react-hooks/exhaustive-deps */
import React, { useState, useEffect } from 'react';
import { Text, View, ImageBackground, Image, FlatList, TouchableOpacity } from 'react-native';
import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';
import MyWishlist from '../Components/PricesScreens/MyWishlist';
import AllCoins from '../Components/PricesScreens/AllCoins';
import BTC from '../Components/PricesScreens/BTC';
import BNB from '../Components/PricesScreens/BNB';
import INR from '../Components/PricesScreens/INR';
import USDT from '../Components/PricesScreens/USDT';
import styles from '../Components/StyleSheet';
import { TextInput, } from 'react-native-gesture-handler';
import AntDesign from 'react-native-vector-icons/AntDesign';
import { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';
import Axios from 'axios';
import DynamicTabView from 'react-native-dynamic-tab-view-test';
import HashMap from 'hashmap';


const PricesMain = () => {

    const [isLoading, setLoading] = useState(true);
    const [userInput, setUserInput] = useState([]);
    const [top, settop] = useState('');
    const [data, setData] = useState([]);




    var map = new HashMap();

    useEffect(() => {
        Axios.get('http://node.finexchanges.com/list-crypto/get')
            .then((response) => setData(response.data["data"]))
            .catch((error) => console.error(error))
            .finally(() => setLoading(false));
    }, []);


    const theArray = [{title:'Wishlist'}];

    //  console.log(theArray)
    useEffect(() => {
        // console.log("hey")
        Axios.get('http://node.finexchanges.com/list-crypto/get')
            .then(response => {
                for (let index = 0; index < Object.keys(response.data["data"]).length; index++) {
                    const newItem = {
                        title: Object.keys(response.data["data"])[index],
                    };
                    theArray.push(newItem)

                }

                settop(theArray);
            })

            .catch((error) => console.error(error))
            .finally(() => setLoading(false));
    }, []);

    // console.log(top)

    const _renderItem = (item, index) => {
    //    console.log(index)
        if (item.title === "Wishlist" && index ===  0){
           return (
            <MyWishlist></MyWishlist>)
         }
        //   else if(item.title === "USDT"  && index ===  1){
        //      return(
        //          <USDT />
        //      )
        //  }
         else if(item.title === "BTC" && index ===  2){
            return(
                <BNB />
            )
        }else if(item.title === "BNB" && index ===  3){
            return(
                <BNB />
            )
        }else if(item.title === "INR" && index ===  4){ 
            return(
                <BNB />
            )
        }
       
    };
    const onChangeTab = index => {  
        console.log(index)
    //     if(index === 0 ){
    //     return(
    //      <MyWishlist></MyWishlist>)
    //  }else if(index === 1){
    //      return(
    //      <USDT />
    //          )
    //  }
    };

    // G  Wishlist
    // LOG  USDT
    // LOG  BTC 
    // LOG  BNB
    // LOG  INR




    return (

        <View style={styles.container}>
            <View>
                <ImageBackground style={{ width: '100%', height: 300 }} source={require('../Components/Assets/back.png')}>
                    <View style={styles.PricesView}>
                        <Text style={styles.Prices}>Prices</Text>
                        <View style={styles.PricesTextInput}>
                            <View style={{ alignSelf: 'center' }}>
                                <AntDesign name="search1" color='#7e7c7a' size={25} style={{ marginLeft: wp(2) }} />
                            </View>
                            <TextInput placeholder='search coins to invest...' style={styles.PricesTextInput1}></TextInput>
                        </View>
 </View>
                </ImageBackground>
            </View>
            <View style={styles.BinanceView}>
                <View style={styles.PriceAMin}>
                <DynamicTabView
                                data={top}

                                renderTab={_renderItem}
                                onChangeTab={onChangeTab}
                                // defaultIndex={defaultIndex}
                                // containerStyle={styles.tabView}
                                headerBackgroundColor={'#26180c'}
                                headerUnderlayColor={'#e88533'}
                          headerTextStyle={'#e88533'}
                              
                            />
                    </View>
</View>
        </View>
    );
}
export default PricesMain;
